package ISO8583

import (
	"fmt"
)

func testPrepareISO8583Message() {
	SetElement(0, "0200")
	SetElement(2, "4761739001010119")
	SetElement(3, "000000")
	SetElement(4, "000000100000")
	SetElement(11, "000040")
	SetElement(14, "2212")
	SetElement(22, "052")
	SetElement(24, "028")
	SetElement(25, "00")
	SetElement(41, "63150001")
	SetElement(42, "000015204000099")
	SetElement(55, "57114761739001010119D221220117589288895A0847617390010101195F2A0203445F34010182025C008407A0000000031010950502000080009A031711069B02E8009C01009F02060000001000009F03060000000000009F080200969F090200969F1A0203449F1E0831323334353637389F2608F4FAD26454FF3CEE9F2701809F3303E0B8C89F34031E03009F3501229F36020A029F3704466D31349F4104000000409F100706010A03A00000")
	SetElement(62, "000040")

	ids := []byte{0, 2, 3, 4, 11, 14, 22, 24, 25, 41, 42, 55, 62}

	msg, err := PrepareISO8583Message(ids)

	if err != nil {
		println(err)
		return
	}

	fmt.Printf("ISO8583 built:%s\r\n", Base16Encode(msg))

}

func saveElement(fieldId int, value string) error {
	fmt.Printf("[%d]:%s\r\n", fieldId, value)
	return nil
}

func testParseISO8583Message() {
	DecodeISO8583Message(Base16Decode("02001C48400300068040164761739001010119000000000000100000000040221200520028003633313530303031303030303135323034303030303939017457114761739001010119D221220117589288895A0847617390010101195F2A0203445F34010182025C008407A0000000031010950502000080009A031711069B02E8009C01009F02060000001000009F03060000000000009F080200969F090200969F1A0203449F1E0831323334353637389F2608F4FAD26454FF3CEE9F2701809F3303E0B8C89F34031E03009F3501229F36020A029F3704466D31349F4104000000409F100706010A03A000000006303030303430"), saveElement)
}

func main() {
	fmt.Printf("building ISO8583 message\r\n")
	testPrepareISO8583Message()
	fmt.Printf("parsing ISO8583 message\r\n")
	testParseISO8583Message()

}
